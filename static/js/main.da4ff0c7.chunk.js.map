{"version":3,"sources":["components/redux/contactSlice/contactSlice.js","components/AddedContacts/IconButton/IconButton.styled.jsx","components/AddedContacts/IconButton/IconButton.jsx","components/redux/filtersSlice/filtersSlice.js","components/SetFilter/SetFilter.jsx","components/AddedContacts/AddedContacts.jsx","components/LoginForm/LoginForm.jsx","components/redux/frontBackSlice/frontBackSlice.js","components/AppBar/AppBar.jsx","components/App.jsx","components/redux/store.js","index.js"],"names":["contactSlice","createSlice","name","initialState","arrContacts","reducers","addContact","state","action","push","payload","deleteContact","index","findIndex","el","id","splice","toggleCompleted","_step","_iterator","_createForOfIteratorHelper","s","n","done","task","value","completed","err","e","f","_contactSlice$actions","actions","contactReducer","reducer","Button","styled","button","_templateObject","Object","taggedTemplateLiteral","IconButton","_ref","children","onClick","allyProps","objectWithoutProperties","react_default","a","createElement","assign","type","defaultProps","filtersSlice","setStatusFilter","filtersReducer","SetFilter","dispatch","useDispatch","useNavigate","onSubmit","preventDefault","form","currentTarget","filter","elements","reset","className","placeholder","AddedContacts","arrayContacts","useSelector","contacts","console","log","getVisiblContacts","contact","toLowerCase","includes","SetFilter_SetFilter","map","number","key","style","marginRight","textAlign","color","AddedContacts_IconButton_IconButton","aria-label","index_esm","LoginForm","nameContact","numberContact","tel","find","Swal","fire","concat","shortid","generate","frontBackSlice","handleFrontBack","frontBackReducer","AppBar","Fragment","href","target","src","alt","checked","htmlFor","LoginForm_LoginForm_LoginForm","AddedContacts_AddedContacts","App","AppBar_AppBar_AppBar","persistConfig","storage","whitelist","persistedContactReducer","persistReducer","store","configureStore","frontBack","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dom_dist","es","integration_react","loading","App_App"],"mappings":"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","file":"static/js/main.da4ff0c7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst contactsInitialState = {\n\tarrContacts: []\n};\n\nconst contactSlice = createSlice({\n\tname: 'contacts',\n\tinitialState: contactsInitialState,\n\treducers: {\n\t\taddContact(state, action) {\n\t\t\tstate.arrContacts.push(action.payload);\n\t\t},\n\t\tdeleteContact(state, action) {\n\t\t\tconst index = state.arrContacts.findIndex(el => el.id === action.payload);\n\t\t\tstate.arrContacts.splice(index, 1);\n\t\t},\n\t\ttoggleCompleted(state, action) {\n\t\t\tfor (const task of state) {\n\t\t\t\tif (task.id === action.payload) {\n\t\t\t\t\ttask.completed = !task.completed;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t},\n})\n\nexport const { addContact, deleteContact, toggleCompleted } = contactSlice.actions\n\nexport const contactReducer = contactSlice.reducer;\n\n\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\nmargin: 0;\n\tpadding: 4px;\n\tborder: none;\n\tborder-radius: 50%;\n\tcolor: white;\n\tfont: inherit;\n\tbackground-color: red;\n\tcursor: pointer;\n\tdisplay: inline-flex;\n\talign-items:center;\n\tjustify-content: center;\n\t:hover {background-color: orange}\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from \"./IconButton.styled\";\n\n\n//import { VscClose } from \"react-icons/vsc\";\n//import './IconButton.scss';\n\nconst IconButton = ({ children, onClick, ...allyProps }) => (\n\t<Button type=\"button\" onClick={onClick} {...allyProps}>\n\t\t{children}\n\t</Button>\n);\n\nIconButton.defaultProps = {\n\tonClick: () => null,\n\tchildren: null,\n};\n\nIconButton.propTypes = {\n\tonClick: PropTypes.func,\n\tchildren: PropTypes.node,\n\t'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n\n//className=\"IconButton\"","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filtersSlice = createSlice({\n\tname: \"filters\",\n\tinitialState: '',\n\treducers: {\n\t\tsetStatusFilter(state, action) {\n\t\t\treturn state = action.payload;\n\t\t},\n\t},\n});\n// Экспортируем генераторы экшенов и редюсер\nexport const { setStatusFilter } = filtersSlice.actions;\nexport const filtersReducer = filtersSlice.reducer;","import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setStatusFilter } from \"../redux/filtersSlice/filtersSlice\"\nimport { useNavigate } from \"react-router-dom\"\n\n\n\nexport const SetFilter = () => {\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tconst form = e.currentTarget\n\t\tconst filter = form.elements.filter.value\n\t\tdispatch(setStatusFilter(filter))\n\t\t//navigate(\"/dashboard\", { raplace: true })\n\t\tform.reset()\n\t}\n\n\tconst dispatch = useDispatch()\n\tconst navigate = useNavigate()\n\n\treturn (\n\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<h4 className=\"mb-4 pb-3\">Find contacts by name</h4>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"filter\"\n\t\t\t\t\tclassName=\"form-style\"\n\t\t\t\t\tplaceholder=\"Find contacts\"\n\t\t\t\t\tid=\"logname\"\n\t\t\t\t/>\n\t\t\t\t<i className=\"input-icon uil uil-user\"></i>\n\t\t\t</div>\n\t\t\t<div className=\"form-link\">\n\t\t\t\t<button type=\"submit\" className=\"btn mt-4\">find</button>\n\t\t\t</div>\n\t\t</form>\n\n\n\t)\n}\n\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { deleteContact } from \"../redux/contactSlice/contactSlice\"\nimport IconButton from \"./IconButton\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { SetFilter } from \"../SetFilter/SetFilter\";\n\n\n\nexport const AddedContacts = () => {\n\n\tconst dispatch = useDispatch()\n\tconst arrayContacts = useSelector(state => state.contacts.arrContacts)\n\tconst filter = useSelector(state => state.filter)\n\tconsole.log(arrayContacts)\n\n\tconst getVisiblContacts = arrayContacts.filter(contact =>\n\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t)\n\n\n\n\n\treturn (\n\t\t<div className=\"card-back\">\n\t\t\t<div className=\"center-wrap\">\n\t\t\t\t<div className=\"section text-center\">\n\t\t\t\t\t<SetFilter />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{getVisiblContacts.map(({ id, name, number }, index) => (\n\t\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: 15, textAlign: \"center\" }}>{index + 1}</span>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: 15, textAlign: \"center\", color: \"red\" }}>{name}:</span>\n\t\t\t\t\t\t\t\t<span style={{ marginRight: 15, textAlign: \"center\" }}>{number}</span>\n\t\t\t\t\t\t\t\t<IconButton aria-label=\"delet\" onClick={() => dispatch(deleteContact(id))}><IoMdClose /></IconButton>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\n\n\n\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"../redux/contactSlice/contactSlice\"\nimport { useNavigate } from \"react-router-dom\"\nimport shortid from 'shortid';\nimport Swal from 'sweetalert2'\nimport './LoginForm.css';\n\n\nexport const LoginForm = () => {\n\tconst arrayContacts = useSelector(state => state.contacts.arrContacts)\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tconst form = e.currentTarget\n\t\tconst nameContact = form.elements.name.value\n\t\tconst numberContact = form.elements.tel.value\n\t\tif (nameContact === \"\") {\n\t\t\tSwal.fire('Enter name')\n\t\t\treturn\n\t\t}\n\t\tif (numberContact === \"\") {\n\t\t\tSwal.fire('Enter number')\n\t\t\treturn\n\t\t}\n\t\tconst validCurrentNum = arrayContacts.find(el => el.number === numberContact);\n\t\tif (validCurrentNum) {\n\t\t\tSwal.fire(`Number ${numberContact} is already in contacts`)\n\t\t\tform.reset()\n\t\t\treturn\n\t\t} else {\n\t\t\tconst state = {\n\t\t\t\tid: shortid.generate(),\n\t\t\t\tname: nameContact,\n\t\t\t\tnumber: numberContact,\n\t\t\t}\n\t\t\tdispatch(addContact(state))\n\t\t}\n\n\t\t//navigate(\"/dashboard\", { raplace: true })\n\t\tform.reset()\n\t}\n\n\tconst dispatch = useDispatch()\n\tconst navigate = useNavigate()\n\n\treturn (\n\t\t<div className=\"card-front\">\n\t\t\t<div className=\"center-wrap\">\n\t\t\t\t<div className=\"section text-center\">\n\t\t\t\t\t<h4 className=\"mb-4 pb-3\">Add contact</h4>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tclassName=\"form-style\"\n\t\t\t\t\t\t\t\tplaceholder=\"Add name\"\n\t\t\t\t\t\t\t\tid=\"logemail\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<i className=\"input-icon uil uil-at\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group mt-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tname=\"tel\"\n\t\t\t\t\t\t\t\tclassName=\"form-style\"\n\t\t\t\t\t\t\t\tplaceholder=\"Add number\"\n\t\t\t\t\t\t\t\tid=\"logpass\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<i className=\"input-icon uil uil-lock-alt\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-link\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn mt-4\" >\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst frontBackSlice = createSlice({\n\tname: \"handle\",\n\tinitialState: false,\n\treducers: {\n\t\thandleFrontBack(state, action) {\n\t\t\treturn state = action.payload;\n\t\t},\n\t},\n});\n// Экспортируем генераторы экшенов и редюсер\nexport const { handleFrontBack } = frontBackSlice.actions;\nexport const frontBackReducer = frontBackSlice.reducer;","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { AddedContacts } from \"../AddedContacts/AddedContacts\"\nimport { LoginForm } from \"../LoginForm/LoginForm\"\nimport './AppBar.css';\nimport { useDispatch } from \"react-redux\";\nimport { handleFrontBack } from \"../redux/frontBackSlice/frontBackSlice\"\n\n\nexport const AppBar = () => {\n\t//const isAdding = useSelector(state => state.contacts.isAdding)\n\tconst dispatch = useDispatch()\n\n\tconst handleChange = (e) => {\n\n\t\tconst value = e.target.checked\n\t\tdispatch(handleFrontBack(value))\n\t\tconsole.log(value)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<a href=\"https://front.codes/\" className=\"logo\" target=\"_blank\">\n\t\t\t\t<img src=\"https://assets.codepen.io/1462889/fcy.png\" alt=\"\" />\n\t\t\t</a>\n\n\t\t\t<div className=\"section\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row full-height justify-content-center\">\n\t\t\t\t\t\t<div className=\"col-12 text-center align-self-center py-5\">\n\t\t\t\t\t\t\t<div className=\"section pb-5 pt-5 pt-sm-2 text-center\">\n\t\t\t\t\t\t\t\t<h6 className=\"mb-0 pb-3 centre h6\">\n\t\t\t\t\t\t\t\t\t<span className=\"h6 first\">Add contact </span>\n\t\t\t\t\t\t\t\t\t<span className=\"h6 second\">Contacts</span>\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"checkbox\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid=\"reg-log\"\n\t\t\t\t\t\t\t\t\tname=\"reg-log\"\n\t\t\t\t\t\t\t\t\tonClick={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"reg-log\"></label>\n\t\t\t\t\t\t\t\t<div className=\"card-3d-wrap mx-auto\">\n\t\t\t\t\t\t\t\t\t<div className=\"card-3d-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<LoginForm />\n\t\t\t\t\t\t\t\t\t\t<AddedContacts />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react';\nimport { AppBar } from './AppBar/AppBar';\n\n\nexport const App = () => {\n\n  // componentDidMount() {\n  //   const contacs = localStorage.getItem('contacs');\n  //   const parsedContacs = JSON.parse(contacs);\n  //   if (parsedContacs) {\n  //     this.setState({ contacts: parsedContacs })\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacs) {\n  //     localStorage.setItem('contacs', JSON.stringify(this.state.contacts))\n  //   }\n  // }\n\n\n  return (\n    <AppBar />\n  )\n}\n\n\n\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactReducer } from \"./contactSlice/contactSlice\";\nimport { filtersReducer } from \"./filtersSlice/filtersSlice\";\nimport { frontBackReducer } from \"./frontBackSlice/frontBackSlice\";\nimport {\n\tpersistStore,\n\tpersistReducer,\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\n\n\nconst persistConfig = {\n\tkey: 'contacts',\n\tstorage,\n\twhitelist: 'contacts.arrContacts'\n}\nconst persistedContactReducer = persistReducer(\n\tpersistConfig,\n\tcontactReducer,\n)\nexport const store = configureStore({\n\treducer: {\n\t\tcontacts: persistedContactReducer,\n\t\tfilter: filtersReducer,\n\t\tfrontBack: frontBackReducer,\n\t},\n\tmiddleware: (getDefaultMiddleware) =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: {\n\t\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t\t},\n\t\t}),\n})\nexport const persistor = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from \"./components/redux/store\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor} />\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}